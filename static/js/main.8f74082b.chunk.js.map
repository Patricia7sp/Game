{"version":3,"sources":["logo.svg","component/Home.js","component/PokeCard.js","component/List.js","component/AppNav.js","component/Pagination.js","container/GameApp.js","component/PokeDescription.js","container/PokeInfoContainer.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","logo","alt","to","withStyles","item","minWidth","textAlign","margin","padding","media","minHeight","name","classes","image","Card","CardMedia","CardContent","Typography","component","variant","List","pokedata","Grid","container","justify","map","pokemon","index","pokeIndex","url","split","length","key","NavColor","backgroundColor","props","AppBar","position","Toolbar","Pagination","increment","decrement","page","Button","color","arial-label","onClick","calor","GameApp","state","pokeData","currentOffset","pageCounter","fetchData","offset","process","params","limit","axios","get","then","res","results","data","setState","catch","error","console","log","this","prevProps","prevState","Component","centerContainer","width","descriptionContainer","descriptionBox","height","descriptionText","fontSize","fontFamily","pokeImage","description","md","Paper","PokeInfoContainer","pokemonDescription","pokeName","pokeId","weight","types","match","pokeDescriptionUrl","getPokeStats","flavor_text_entries","flavor_text","Routes","exact","path","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8f74082b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0b50d3d3.svg\";","import React  from \"react\";\nimport '../App.css'; \nimport logo from '../logo.svg';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Home = () => {\n\n    return (\n      <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n        <header className=\"App-header\">\n          <h1>Pokemon GO </h1>\n          <Link to='/pokemons'> Click Para Ver Pokemons </Link>\n        </header>\n\n      </div>\n\n     \n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\n\nfunction PokeCard ({name, classes, image, to= '' }){\n  return (\n    <Card className={classes.item}>\n      <CardMedia className={classes.media} image={image} />\n      <CardContent>\n        <Link to={to}><Typography component=\"p\" variant=\"h5\">{name}</Typography></Link>\n      </CardContent>\n    \n    </Card>\n\n  );\n\n}\n\n\n\nexport default  withStyles ({\n\n  item: {\n    minWidth: \"450px\",\n    textAlign: \"center\",\n\t\tmargin: \"2em\", \n    padding: '2em'\n    \n  },\n  \n  media:{\n    minHeight: \"450px\"\n  }\n\n\n  \n}) (PokeCard);  ","import React,{Fragment} from 'react';\nimport PokeCard from './PokeCard';\nimport { Grid } from '@material-ui/core';\n\n\n\nfunction List({ pokedata }) {\n  return(\n    <Fragment>\n        <Grid container justify=\"center\">\n        {pokedata.map((pokemon, index) => {\n            \n          let url = \"https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/other-sprites/official-artwork/\"\n          let pokeIndex = pokemon.url.split('/')[pokemon.url.split('/').length - 2]\n          \n          return <PokeCard key={index} to={`/poke-info/${pokeIndex}/${pokemon.name}`} name={pokemon.name} image={`${url}${pokeIndex}.png?raw=true`}/>\n        })}\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default List;","import React from 'react';\nimport {AppBar, Typography, Toolbar } from '@material-ui/core';\nimport {withStyles } from '@material-ui/core/styles';\nimport {Link } from 'react-router-dom';\n\nfunction AppNav(props){\n\n  const { classes } = props\n\n  return (\n\n    <AppBar className = {classes.NavColor} position= \"static\">\n      <Toolbar variant=\"dense\">\n        <Typography variant= \"h6\" component=\"p\"> <Link to=''>HOME</Link> </Typography>\n      </Toolbar>\n      \n    </AppBar>\n  )\n}\n\nexport default withStyles({\n  NavColor: {\n    backgroundColor: 'rgb(77, 124, 145)'\n  }\n\n}) (AppNav)","import React, {Fragment} from 'react';\nimport {Button} from \"@material-ui/core\";\n\nconst Pagination = ({increment, decrement, page}) =>{\n return (\n   <Fragment>\n      <Button variant=\"contained\" color=\"primary\"  arial-label onClick={decrement}> Anterior </Button>\n      <Button variant=\"contained\" calor=\"primary\">\n        {page}\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" arial-label onClick={increment}> Seguinte </Button> \n      \n   </Fragment>\n );\n}\n\n\nexport default Pagination;","import React, { Component }  from \"react\";\nimport axios from 'axios';\nimport List from '../component/List';\nimport AppNav from '../component/AppNav';\nimport Pagination from '../component/Pagination';\n\n\nclass GameApp extends Component {\n\n  state = {\n    pokeData: [],\n    currentOffset: 0,\n    pageCounter: 1\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {currentOffset} = this.state;\n    if (currentOffset !==  prevState.currentOffset){\n      if(currentOffset < 0){\n        this.setState({\n          currentOffset: 0,\n          pageCounter: 1,\n        })\n        this.fetchData(prevState.currentOffset); \n      }\n       this.fetchData(currentOffset); \n\n    }\n  }\n    \n  \n  fetchData= (offset = 0) => {\n    const url = `${process.env.REACT_APP_POKE_API_BASE_URL}pokemon`;\n    let params = {\n       offset: offset,\n       limit: 20\n    }\n    axios.get(url, {params})\n     .then(res => {\n       const {results } = res.data;\n\n       this.setState ({\n        pokeData: results,\n  \n     })\n\n     })\n     .catch(error =>{\n      console.log(error);\n     })\n  }\n\n  increment = () =>{\n    const {currentOffset, pageCounter }  = this.state;\n    this.setState ({\n      currentOffset: currentOffset + 20,\n      pageCounter: pageCounter + 1\n    });\n\n   \n   }\n\n  decrement = ()=> {\n    const {currentOffset,pageCounter }  = this.state;\n    this.setState ({\n      currentOffset: currentOffset - 20,\n      pageCounter: pageCounter - 1\n    });\n\n  }\n\n  \n\n  render() {\n    const { pokeData, pageCounter } = this.state;\n    \n    return (\n      < >\n        <AppNav />\n        <Pagination  \n          increment={this.increment} decrement={this.decrement} page={pageCounter}/>\n        <List pokedata={pokeData} /> \n      </>\n    )\n  }\n}\n\nexport default GameApp;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport PokeCard from \"./PokeCard\";\nimport Paper from  \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/core/styles\";  \n\n\nfunction PokeDescription ({pokeImage, name, description, classes}) {\n  return (\n    <Grid container className={classes.centerContainer}>\n      <Grid item md={6}>\n          <PokeCard image={pokeImage} name={name} />\n      </Grid>\n      <Grid  item md={6}> \n        <div className= {classes.descriptionContainer}>\n          <Paper className= {classes.descriptionBox}>\n            <Typography variant='body1' component= \"p\" className= {classes.descriptionText}>\n              {description}\n            </Typography>\n          </Paper>\n        </div>\n      </Grid>\n    </Grid>\n\n  );\n}\n\nexport default withStyles({\n\n  centerContainer: {\n      margin: '0 auto',\n      width: '60% !important'\n  },\n\n  descriptionContainer: {\n     margin: '2em',\n    \n  },\n\n  descriptionBox:{\n      padding: '2em',\n      height: 'auto',\n  },\n\n  descriptionText: {\n     fontSize: '1em',\n     textAlign: 'justify',\n     fontFamily: 'Verdana'\n  }\n\n})(PokeDescription);","import React, {Component} from 'react';\nimport PokeDescription from \"../component/PokeDescription\";\nimport AppNav from \"../component/AppNav\";\n// import externo\nimport axios from \"axios\";\n\n\n\nclass PokeInfoContainer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemonDescription:\"\",\n      pokeName: \"\",\n      pokeId: \"\",\n      height: \"\",\n       weight: \"\",\n       types: [],\n\n    };\n  }\n\n  componentDidMount () {\n    //peticion com axios\n    const {match} = this.props;\n    const pokeId = match.params.pokeIndex;\n    const pokeName = match.params.pokeName;\n    const pokeDescriptionUrl = `${process.env.REACT_APP_POKE_API_BASE_URL}pokemon-species/${pokeId}/`;\n    this.getPokeStats();\n    axios.get(pokeDescriptionUrl)\n   .then(res => { \n     const { flavor_text_entries } =res.data;\n     this.setState ({\n        pokemonDescription: flavor_text_entries[11].flavor_text,\n        pokeName,\n        pokeId\n\n      });\n     \n    })\n\n  }\n\n\n  getPokeStats() {\n    const {match} = this.props;\n    const pokeId = match.params.pokeIndex;\n    axios.get(`${process.env.REACT_APP_POKE_API_BASE_URL}pokemon/${pokeId}/`)\n    .then(res => {\n      const {height, weight, types } = res.data;\n      this.setState ({\n        height,\n        weight,\n        types\n      })\n    })\n  }\n  \n  \n  render (){\n\n\n    let url = `${process.env.REACT_APP_POKEMON_ART}`;\n\n    const {pokemonDescription, pokeName, pokeId, height, weight, types} = this.state;\n    return (\n      < >\n        <AppNav />\n          <PokeDescription  \n            name= {pokeName}\n            pokeImage={`${url}${pokeId}.png?raw=true`} \n            description={pokemonDescription} \n            height= {height}\n            weight= {weight}\n            types= {types} \n          />\n      </>\n\n\n    );  \n  }\n}\n\nexport default PokeInfoContainer;","import React from 'react';\nimport {HashRouter, Route } from   'react-router-dom';\nimport Home from './component/Home';\nimport GameApp from './container/GameApp';\nimport PokeInfoContainer from './container/PokeInfoContainer';\n\n\nconst Routes = () => {\n  return (\n   \n    <HashRouter>\n      <Route  exact path= '/' component={Home} />\n      <Route path='/pokemons'  component={GameApp} />\n      <Route  exact path=\"/poke-info/:pokeIndex/:pokeName\" component={PokeInfoContainer} />\n    </HashRouter>   \n    \n  );\n}\n\nexport default Routes;","import React, {Component} from 'react';\n\nimport Routes from './Routes';\n\nclass App extends Component {\n  render(){\n    return (\n      <Routes />\n    );\n        \n  } \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Browser Router \nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister()"],"sourceRoot":""}